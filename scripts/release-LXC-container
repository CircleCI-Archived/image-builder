#!/bin/bash
## This is an internal script for releasing an image created with image-builder
## as an LXC images for customers using the LXC based version of CCIE.
## If you are building a custom image, you can simple use docker-export and
## upload the image to any url accessible from your builder machine.

function usage {
    echo "Usage: $0 <image-name> <image-file> [--region <region>]"
    exit 1
}

if ! [ $# -eq 2 ]
then
  if ! ([ $# -eq 4 ] && [ $3 == "--region" ])
  then
    usage
    exit 1
  fi
fi

NAME=$1
FILE=$2
CHOSEN_REGION=$4

ROOT_DIR="$(git rev-parse --show-toplevel)"

MAIN_REGION=us-east-1

OTHER_SUPPORTED_REGIONS=(
    ap-northeast-1
    ap-northeast-2
    ap-southeast-1
    ap-southeast-2
    eu-central-1
    eu-west-1
    sa-east-1
    us-west-1
    us-west-2
)

function retry {
  n=$1
  shift
  for i in $(seq $n); do
    "$@" && break
    echo retrying "$@" ...
  done
}

function s3_url {
    REGION=$1
    echo "s3://circleci-enterprise-assets-$REGION/containers/$NAME.tar.gz"
}

function publish_container {
    REGION=$1
    echo publishing container to $REGION
    retry 3 \
      aws s3 cp $FILE $(s3_url $REGION) \
      --acl public-read \
      --region $REGION
    echo done publishing container to $REGION
}

function copy_container {
    SRC_REGION=$1
    DEST_REGION=$2
    retry 3 \
      aws s3 cp $(s3_url $SRC_REGION) $(s3_url $DEST_REGION) \
      --acl public-read \
      --source-region $SRC_REGION \
      --region $DEST_REGION
}

if [[ -n $CHOSEN_REGION ]]
then
  publish_container $CHOSEN_REGION
else
  publish_container $MAIN_REGION
  echo copying container to the following regions:
  for REGION in ${OTHER_SUPPORTED_REGIONS[@]}
  do
    echo $REGION
    copy_container $MAIN_REGION $REGION &
    sleep 0.1
  done

  echo waiting on all containers
  wait
  echo done copying all containers
fi
